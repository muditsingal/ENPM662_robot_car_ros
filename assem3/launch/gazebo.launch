<launch>
  <include
    file="$(find gazebo_ros)/launch/empty_world.launch" />
  <param name="robot_description" command="$(find xacro)/xacro $(find assem3)/urdf/assem3_integration.xacro" />
  <param name="my_robot" value="assem3" />
  <arg name="init_pose" value="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" />

  <!-- This command adds the controller variables you defined in the config file into ros's parameter list. Simply add the file name in the file tag -->
  <!-- rosparam file="$(find assem3)/config/config_controllers.yaml" command="load"/ -->


  <!-- Node for publishing base footprint -->
  <!-- node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="False"/>
  </node -->

  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />

  <!-- Controller spawner: Starts all the defined controllers with their configs. Just add your controller names defined in your config file into the args tag below   -->
  <!-- node name="controller_spwaner" pkg="controller_manager" type="spawner" respawn="true"
    output="screen" ns="/assem3" args="joint_state_controller BR_wheel_vel_controller BL_wheel_vel_controller FR_steer_pos_controller FL_steer_pos_controller" / -->

  <!-- A node to publish the robot states onto ros network -->
  <!-- node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/ -->

  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="$(arg init_pose) -param robot_description -urdf -model my_robot"
    output="screen" />
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />
</launch>
